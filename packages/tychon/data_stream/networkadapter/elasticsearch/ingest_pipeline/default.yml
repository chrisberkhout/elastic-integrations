---
description: Pipeline for parsing TYCHON Network Adapters
processors:
  - set:
      field: event.module
      value: tychon
  - set:
      tag: set_orginal
      copy_from: message
      field: event.original
  - json:
      field: message
      add_to_root: true
      add_to_root_conflict_strategy: replace
      tag: convert_json
  - dot_expander:
      tag: expand_dots
      field: '*'
      override: true
  - set:
      field: '@timestamp'
      value: '{{_ingest.timestamp}}'
  - set:
      field: event.ingested
      value: '{{_ingest.timestamp}}'
  - date:
      tag: date_timestamp
      field: '@timestamp'
      formats:
        - ISO8601
  - set:
      field: ecs.version
      value: 8.10.0
  - set:
      field: event.kind
      value: state
  - set:
      field: event.category
      value: [configuration]
  - set:
      field: event.type
      value: [info]
  - remove:
      tag: remove_preserve_original_event
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_failure: true
      ignore_missing: true
  - remove:
      field: host.adapter.ip
      if: ctx.host.adapter.ip == ''
  - remove:
      field: host.adapter.gateway
      if: ctx.host.adapter.gateway == ''
  - remove:
      field: host.adapter.dhcp.server
      if: ctx.host.adapter.dhcp.server == ''
  - remove:
      field: host.adapter.dhcp.lease_obtained
      if: ctx.host.adapter.dhcp.lease_obtained == ''
  - remove:
      field: host.adapter.dhcp.lease_expires
      if: ctx.host.adapter.dhcp.lease_expires == ''
  - remove:
      field: host.adapter.driver.date
      if: ctx.host.adapter.driver.date == ''
  - remove:
      field: host.adapter.wins_server
      if: ctx.host.adapter.wins_server == ''
  - set:
      field: link_speed
      value: '{{host.adapter.link_speed}}'
  - set:
      field: host.adapter.link_speed
      value: 0
  - remove:
      field: message
      ignore_missing: true
  - script:
      source:
            |
            if(ctx['link_speed'].contains(' ')){
                String[] linkSpeed=ctx['link_speed'].splitOnToken(' ');
                ctx.remove('link_speed');
                ctx['host.adapter.link_speed']=Long.parseLong(linkSpeed[0]);
                if(linkSpeed[1]=='Kbps'){
                    ctx['host.adapter.link_speed']*=1024
                }
                if(linkSpeed[1]=='Mbps'){
                    ctx['host.adapter.link_speed']*=1048576
                }
                if(linkSpeed[1]=='Gbps'){
                    ctx['host.adapter.link_speed']*=1073741824
                }
            } else {
                ctx.remove('link_speed');
            }
      ignore_failure: true
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
