---
description: Pipeline for TYCHON Features Datasets
processors:
  - set:
      field: event.module
      value: tychon
  - set:
      tag: set_orginal
      copy_from: message
      field: event.original
  - json:
      field: message
      add_to_root: true
      add_to_root_conflict_strategy: replace
      tag: convert_json
  - dot_expander:
      tag: expand_dots
      field: '*'
      override: true
  - remove:
      field: file.created
      if: ctx.file.created == ''
      tag: remove_file_created
      ignore_failure: true
      ignore_missing: true
  - remove:
      field: file.accessed
      if: ctx.file.accessed == ''
      tag: remove_file_accessed
      ignore_failure: true
      ignore_missing: true
  - remove:
      field: file.mtime
      if: ctx.file.mtime == ''
      tag: remove_file_mtime
      ignore_failure: true
      ignore_missing: true
  - script:
      lang: painless
      description: Remove non-strings from file.attributes
      if: ctx.file?.attributes instanceof List
      source: |
        def result = [];
        for (def v : ctx.file.attributes) {
          if (v instanceof String) {
            result.add(v);
          }
        }
        ctx.file.attributes = result;
      tag: remove_non_strings_from_file_attributes
  - convert:
      field: file.size
      type: long
      ignore_missing: true
      tag: file_size_convert
  - rename:
      field: "event.windows_certificate_store_path"
      target_field: tychon.windows_certificate_store_path
      ignore_missing: true
      tag: x509_wcsp_rename
  - rename:
      field: "x509.hash"
      target_field: tychon.x509.hash
      ignore_missing: true
      tag: x509_hash_rename
  - rename:
      field: "x509.hash_algorithm"
      target_field: tychon.x509.hash_algorithm
      ignore_missing: true
      tag: x509_algorithm_rename
  - rename:
      field: "x509.public_signature_algorithm"
      target_field: tychon.x509.public_signature_algorithm
      ignore_missing: true
      tag: x509_pubsignalgo_rename
  - rename:
      field: "x509.private_signature_algorithm"
      target_field: tychon.x509.private_signature_algorithm
      ignore_missing: true
      tag: x509_privsignalgo_rename
  - convert:
      field: x509.public_key_size
      type: long
      ignore_missing: true
      tag: x509_pubkeysize_convert
  - rename:
      field: "x509.private_key_size"
      target_field: tychon.x509.private_key_size
      ignore_missing: true
      tag: x509_privkeysize_rename
  - rename:
      field: "x509.public_key_thumbprint"
      target_field: tychon.x509.public_key_thumbprint
      ignore_missing: true
      tag: x509_pktp_rename
  - rename:
      field: "x509.public_key_type"
      target_field: tychon.x509.public_key_type
      ignore_missing: true
      tag: x509_pktype_rename
  - rename:
      field: "x509.enhanced_key_usage"
      target_field: tychon.x509.enhanced_key_usage
      ignore_missing: true
      tag: x509_eku_rename
  - split:
      field: "tychon.x509.enhanced_key_usage"
      separator: ","
      ignore_missing: true
      tag: x509_eku_split
      ignore_failure: true
  - rename:
      field: "x509.extended_validation"
      target_field: tychon.x509.extended_validation
      ignore_missing: true
      tag: x509_exv_rename
  - rename:
      field: "x509.hash"
      target_field: tychon.x509.hash
      ignore_missing: true
      tag: x509_hash_rename
  - rename:
      field: "x509.hash_algorithm"
      target_field: tychon.x509.hash_algorithm
      ignore_missing: true
      tag: x509_hashalgo_rename
  - rename:
      field: "x509.is_root"
      target_field: tychon.x509.is_root
      ignore_missing: true
      tag: x509_isroot_rename
  - rename:
      field: "x509.is_self_signed"
      target_field: tychon.x509.is_self_signed
      ignore_missing: true
      tag: x509_isself_rename
  - rename:
      field: "x509.is_valid"
      target_field: tychon.x509.is_valid
      ignore_missing: true
      tag: x509_isvalid_rename
  - rename:
      field: "x509.key_usage"
      target_field: tychon.x509.key_usage
      ignore_missing: true
      tag: x509_keyusage_rename
  - split:
      field: "tychon.x509.key_usage"
      separator: ","
      ignore_missing: true
      tag: x509_keyusage_split
      ignore_failure: true
  - rename:
      field: "x509.friendly_name"
      target_field: tychon.x509.friendly_name
      ignore_missing: true
      tag: x509_friendly_rename
  - rename:
      field: "x509.subject_key_identifier"
      target_field: tychon.x509.subject_key_identifier
      ignore_missing: true
      tag: x509_ski_rename
  - rename:
      field: "x509.certificate_template"
      target_field: tychon.x509.certificate_template
      ignore_missing: true
      tag: x509_certtemp_rename
  - rename:
      field: "x509.extended_error_information"
      target_field: tychon.x509.extended_error_information
      ignore_missing: true
      tag: x509_eei_rename
  - rename:
      field: "certificate.is_weak"
      target_field: tychon.certificate.is_weak
      ignore_missing: true
      tag: cert_isweak_rename
  - rename:
      field: "certificate.is_expired"
      target_field: tychon.certificate.is_expired
      ignore_missing: true
      tag: cert_isexp_rename
  - rename:
      field: "certificate.is_file"
      target_field: tychon.certificate.is_file
      ignore_missing: true
      tag: cert_isfile_rename
  - rename:
      field: "certificate.is_expiring_soon"
      target_field: tychon.certificate.is_expiring_soon
      ignore_missing: true
      tag: cert_isexpsoon_rename
  - rename:
      field: "certificate.is_long_lived"
      target_field: tychon.certificate.is_long_lived
      ignore_missing: true
      tag: cert_islonglived_rename
  - rename:
      field: "certificate.location.trust_category"
      target_field: tychon.certificate.location.trust_category
      ignore_missing: true
      tag: cert_trustcat_rename
  - rename:
      field: "process.information_source"
      target_field: tychon.process.information_source
      ignore_missing: true
      tag: process_infosource_rename
  - rename:
      field: "process.description"
      target_field: tychon.process.description
      ignore_missing: true
      tag: process_description_rename
  - rename:
      field: "process.owner"
      target_field: process.user.name
      ignore_missing: true
      tag: process_owner_rename
  - rename:
      field: "process.ppid"
      target_field: process.parent.pid
      ignore_missing: true
      tag: process_ppid_rename
  - convert:
      field: process.pid
      type: long
      ignore_missing: true
  - convert:
      field: process.parent.pid
      type: long
      ignore_missing: true
  - convert:
      field: server.port
      type: long
      ignore_missing: true
  - rename:
      field: "service.description"
      target_field: tychon.service.description
      ignore_missing: true
      tag: process_servicedesc_rename
  - rename:
      field: "service.display_name"
      target_field: tychon.service.display_name
      ignore_missing: true
      tag: process_servicedn_rename
  - rename:
      field: "file.code_signature.issuer"
      target_field: file.x509.issuer.distinguished_name
      ignore_missing: true
      tag: file_codesigiss_rename
  - rename:
      field: "file.code_signature.issuer_name"
      target_field: tychon.file.code_signature.issuer_name
      ignore_missing: true
      tag: file_codesigin_rename
  - rename:
      field: "file.code_signature.thumbprint"
      target_field: tychon.file.code_signature.thumbprint
      ignore_missing: true
      tag: file_codesigthumb_rename
  - rename:
      field: "file.code_signature.subject_name"
      target_field: tychon.file.code_signature.subject_name
      ignore_missing: true
      tag: file_codesigsubname_rename
  - rename:
      field: "file.version"
      target_field: tychon.file.version
      ignore_missing: true
      tag: file_version_rename
  - script:
      lang: painless
      description: Normalize x509 array fields
      source: |
        def fieldset = ctx.x509;
        if (fieldset != null) {
          for (String partyName : ["issuer", "subject"]) {
            def party = fieldset[partyName];
            if (party != null) {
              for (String fieldName : [
                  "common_name",
                  "country",
                  "distinguished_name",
                  "locality",
                  "organizational_unit",
                  "organization",
                  "state_or_province"
                ]) {
                def value = party[fieldName];
                if (value == "") {
                  party.remove(fieldName);
                } else if (value instanceof String) {
                  party[fieldName] = [value];
                }
              }
            }
          }
        }
  - set:
      field: '@timestamp'
      value: '{{_ingest.timestamp}}'
  - set:
      field: event.ingested
      value: '{{_ingest.timestamp}}'
  - date:
      tag: date_timestamp
      field: '@timestamp'
      formats:
        - ISO8601
  - set:
      field: ecs.version
      value: 8.11.0
  - set:
      field: event.kind
      value: state
  - set:
      field: event.category
      value: [configuration]
  - set:
      field: event.type
      value: [info]
  - convert:
      field: script.current_duration
      type: string
      ignore_missing: true
  - split:
      field: script.current_duration
      separator: '\.+'
      target_field: tempduration
      ignore_failure: true
  - set:
      field: script.current_duration
      value: '{{{tempduration.0}}}'
      ignore_failure: true
  - remove:
      field: tempduration
      ignore_failure: true
      ignore_missing: true
  - convert:
      tag: convert_script_current_duration
      field: script.current_duration
      type: long
      ignore_missing: true
  - remove:
      field: message
      ignore_missing: true
  - remove:
      tag: remove_preserve_original_event
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_failure: true
      ignore_missing: true
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
