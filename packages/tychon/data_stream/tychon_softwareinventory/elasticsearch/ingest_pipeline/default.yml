---
description: Pipeline for Software Inventory
processors:
  - set:
      field: event.module
      value: tychon
  - set:
      tag: set_orginal
      copy_from: message
      field: event.original
  - json:
      field: message
      add_to_root: true
      add_to_root_conflict_strategy: replace
      tag: convert_json
  - dot_expander:
      tag: expand_dots
      field: '*'
      override: true
  - set:
      field: '@timestamp'
      value: '{{_ingest.timestamp}}'
  - set:
      field: event.ingested
      value: '{{_ingest.timestamp}}'
  - date:
      tag: date_timestamp
      field: '@timestamp'
      formats:
        - ISO8601
  - rename: 
      field: edition
      target_field: package.edition
      ignore_failure: true
      ignore_missing: true
      tag: edition_rename
  - rename: 
      field: comment
      target_field: package.description
      ignore_failure: true
      ignore_missing: true
      tag: comment_rename
  - set:
      field: ecs.version
      value: 8.10.0
  - set:
      field: event.kind
      value: state
  - gsub:
      field: host.mac
      pattern: ':'
      replacement: '-'
      ignore_missing: true
  - split:
      field: host.ip
      separator: ','
      ignore_missing: true
      tag: hostipsplit
  - split:
      field: host.ipv4
      separator: ','
      ignore_missing: true
  - convert:
      field: host.uptime
      type: string
      ignore_missing: true
  - set:
      field: host.uptime
      value: '0'
      ignore_failure: true
      if: ctx.host.uptime == ''
  - split:
      field: host.uptime
      separator: '\.+'
      target_field: tempuptime
      ignore_failure: true
  - set:
      field: host.uptime
      value: '{{{tempuptime.0}}}'
      ignore_failure: true
  - remove:
      field: tempuptime
      ignore_failure: true
      ignore_missing: true
  - convert:
      tag: convert_host_uptime
      field: host.uptime
      type: long
      ignore_missing: true
  - set:
      field: event.category
      value: [package]
  - set:
      field: event.type
      value: [info]
  - convert:
      field: script.current_duration
      type: string
      ignore_missing: true
  - split:
      field: script.current_duration
      separator: '\.+'
      target_field: tempduration
      ignore_failure: true
  - set:
      field: script.current_duration
      value: '{{{tempduration.0}}}'
      ignore_failure: true
  - remove:
      field: tempduration
      ignore_failure: true
      ignore_missing: true
  - convert:
      tag: convert_script_current_duration
      field: script.current_duration
      type: long
      ignore_missing: true
  - remove:
      tag: remove_preserve_original_event
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_failure: true
      ignore_missing: true
  - set:
      field: package.installed
      value: '1970-01-01T00:00:01Z'
      if: ctx.package.installed == 'installed'
  - set:
      field: package.installed
      value: '1970-01-01T00:00:01Z'
      if: ctx.package.installed == ''
  - gsub:
      field: package.size
      pattern: '[^0-9]'
      replacement: ''
  - set:
      field: package.size
      value: 0
      ignore_failure: true
      if: ctx.package.size == ''
  - convert:
      field: package.size
      type: long
      ignore_missing: true
  - gsub:
      field: package.version_build
      pattern: '[^0-9]'
      replacement: ''
      ignore_missing: true
  - gsub:
      field: package.version_major
      pattern: '[^0-9]'
      replacement: ''
      ignore_missing: true
  - gsub:
      field: package.version_minor
      pattern: '[^0-9]'
      replacement: ''
      ignore_missing: true
  - gsub:
      field: package.version_release
      pattern: '[^0-9]'
      replacement: ''
      ignore_missing: true
  - set:
      field: event.kind
      value: state
  - set:
      field: package.type
      value: rpm
      if: ctx.package.type == ''
  - remove:
      field: message
      ignore_missing: true
  - script:
      source: ctx.package.cpe = "cpe:/a:" + ctx.package.name + ":" + ctx.package.version
      if: ctx.package.cpe == ''
      ignore_failure: true
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
